{
  "version": 3,
  "sources": ["../bundle-ryvzru/checked-fetch.js", "../../../functions/api/embed/%5Bid%5D.js", "../../../functions/api/loadProject.js", "../../../functions/api/login.js", "../../../functions/api/logout.js", "../../../functions/api/saveProject.js", "../../../functions/player/%5B%5Bpath%5D%5D.js", "../../../functions/_middleware.js", "functionsRoutes-0.8657912370931966.mjs", "../../../node_modules/path-to-regexp/src/index.ts", "../../../node_modules/wrangler/templates/pages-template-worker.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-ryvzru/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-ryvzru/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/matthewgawronski/Documents/Interactive Video Editor/.wrangler/tmp/pages-KHvRlU/functionsWorker-0.874563847359888.mjs",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "export async function onRequestGet(context) {\n  const { request, env, params } = context;\n  const { id } = params;\n\n  console.log(`Embed API requested for project: ${id}`);\n  \n  try {\n    // Connect to the D1 database\n    const db = env.DB;\n    if (!db) {\n      return new Response(JSON.stringify({ error: \"Database connection failed\" }), {\n        status: 500,\n        headers: { \"Content-Type\": \"application/json\" }\n      });\n    }\n\n    // Query for the project by ID\n    const project = await db.prepare(`SELECT * FROM projects WHERE id = ?`).bind(id).first();\n    \n    if (!project) {\n      return new Response(JSON.stringify({ error: \"Project not found\" }), {\n        status: 404,\n        headers: { \n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      });\n    }\n    \n    // Parse the data column from JSON string to object\n    if (project.data && typeof project.data === 'string') {\n      project.data = JSON.parse(project.data);\n    }\n    \n    // Return the project data\n    return new Response(JSON.stringify(project.data), {\n      status: 200,\n      headers: { \n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Cache-Control\": \"public, max-age=600\"\n      }\n    });\n  } catch (error) {\n    console.error(\"Error fetching project for embed:\", error);\n    return new Response(JSON.stringify({ error: error.message }), {\n      status: 500,\n      headers: { \n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    });\n  }\n}\n", "export const onRequestGet = async ({ request, env }) => {\n  const { searchParams } = new URL(request.url);\n  const id = searchParams.get(\"id\");\n  if (!id) {\n    return new Response(\"Missing id\", { status: 400 });\n  }\n\n  try {\n    const row = await env.DB.prepare(\"SELECT id, title, data, created_at, updated_at FROM projects WHERE id=?1\")\n      .bind(id)\n      .first();\n    if (!row) return new Response(\"Not found\", { status: 404 });\n    return new Response(JSON.stringify(row), {\n      headers: { \"Content-Type\": \"application/json\", \"Access-Control-Allow-Origin\": \"*\" },\n    });\n  } catch (err) {\n    return new Response(\"DB error: \" + err.message, { status: 500 });\n  }\n};\n", "// functions/api/login.js\n\n// A simple utility for creating a session cookie. \n// In a real-world application, you would use a library like `jose` for JWTs.\nasync function createSession(username) {\n    const sessionData = JSON.stringify({ username, loggedInAt: Date.now() });\n    return btoa(sessionData); // Base64 encode the session data\n}\n\nexport const onRequestPost = async ({ request, env }) => {\n    try {\n        const { username, password } = await request.json();\n\n        // Get credentials from environment variables\n        const storedUsername = env.ADMIN_USERNAME;\n        const storedPassword = env.ADMIN_PASSWORD;\n\n        if (!storedUsername || !storedPassword) {\n            return new Response(\"Administrator credentials are not configured.\", { status: 500 });\n        }\n\n        // Validate credentials\n        if (username === storedUsername && password === storedPassword) {\n            const sessionToken = await createSession(username);\n\n            // Set a secure, HttpOnly cookie\n            const cookie = `session=${sessionToken}; HttpOnly; Secure; Path=/; SameSite=Strict; Max-Age=86400`; // 24 hours\n\n            return new Response(JSON.stringify({ success: true, message: \"Login successful\" }), {\n                status: 200,\n                headers: {\n                    \"Set-Cookie\": cookie,\n                    \"Content-Type\": \"application/json\",\n                },\n            });\n        } else {\n            return new Response(JSON.stringify({ success: false, message: \"Invalid username or password\" }), {\n                status: 401,\n                headers: { \"Content-Type\": \"application/json\" },\n            });\n        }\n    } catch (error) {\n        return new Response(JSON.stringify({ success: false, message: \"An error occurred during login.\" }), {\n            status: 500,\n            headers: { \"Content-Type\": \"application/json\" },\n        });\n    }\n};\n", "// functions/api/logout.js\n\nexport const onRequestPost = async () => {\n    // To log out, we clear the session cookie by setting its expiration date to the past.\n    const cookie = `session=; HttpOnly; Secure; Path=/; SameSite=Strict; Expires=Thu, 01 Jan 1970 00:00:00 GMT`;\n\n    return new Response(JSON.stringify({ success: true, message: \"Logout successful\" }), {\n        status: 200,\n        headers: {\n            \"Set-Cookie\": cookie,\n            \"Content-Type\": \"application/json\",\n        },\n    });\n};\n", "export const onRequestPost = async ({ request, env }) => {\n\n  let body;\n  try {\n    body = await request.json();\n  } catch {\n    return new Response(\"Invalid JSON\", { status: 400 });\n  }\n\n  const { id, title, data } = body;\n  if (!id || !title || !data) {\n    return new Response(\"Missing fields\", { status: 400 });\n  }\n\n  const now = new Date().toISOString();\n  try {\n    await env.DB.prepare(\n      `INSERT INTO projects (id, title, data, created_at, updated_at)\n       VALUES (?1, ?2, ?3, ?4, ?4)\n       ON CONFLICT(id) DO UPDATE SET title=?2, data=?3, updated_at=?4`\n    ).bind(id, title, JSON.stringify(data), now).run();\n  } catch (err) {\n    return new Response(\"DB error: \" + err.message, { status: 500 });\n  }\n\n  return new Response(JSON.stringify({ success: true }), {\n    headers: { \"Content-Type\": \"application/json\" },\n  });\n};\n", "// This is a direct route function that serves the player without middleware\nexport async function onRequest({ request, params, env }) {\n  const projectId = new URL(request.url).searchParams.get('project');\n  \n  // Build a complete standalone player HTML that doesn't depend on any other assets\n  const htmlContent = '<!DOCTYPE html>' + '\\n' + `\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Interactive Video Player</title>\n    <style>\n        html, body {\n            margin: 0;\n            padding: 0;\n            width: 100%;\n            height: 100%;\n            overflow: hidden;\n            background-color: #000;\n        }\n        #player-container {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n        #video-container {\n            position: relative;\n            width: 100%;\n            height: 100%;\n        }\n        video {\n            width: 100%;\n            height: 100%;\n            object-fit: contain;\n        }\n        .buttons-overlay {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            pointer-events: none;\n        }\n        .interactive-button {\n            position: absolute;\n            background: rgba(255, 255, 255, 0.8);\n            border: 2px solid #3498db;\n            border-radius: 5px;\n            padding: 8px 15px;\n            font-family: Arial, sans-serif;\n            font-size: 16px;\n            color: #333;\n            cursor: pointer;\n            pointer-events: all;\n            transition: all 0.3s;\n            z-index: 10;\n        }\n        .interactive-button:hover {\n            background: rgba(255, 255, 255, 0.95);\n            transform: scale(1.05);\n            box-shadow: 0 0 10px rgba(0,0,0,0.2);\n        }\n        \n        /* Highlighter styles */\n        #highlighter-controls {\n            position: absolute;\n            top: 10px;\n            right: 10px;\n            z-index: 100;\n            background: rgba(255, 255, 255, 0.7);\n            border-radius: 5px;\n            padding: 5px;\n        }\n        #highlighter-toggle {\n            background: #3498db;\n            color: white;\n            border: none;\n            border-radius: 3px;\n            padding: 5px 10px;\n            cursor: pointer;\n        }\n        #highlighter-toggle.active {\n            background: #e74c3c;\n        }\n        #color-picker {\n            margin-top: 5px;\n            display: none;\n        }\n        #color-picker.active {\n            display: block;\n        }\n        .color-option {\n            width: 20px;\n            height: 20px;\n            border-radius: 50%;\n            display: inline-block;\n            margin: 0 3px;\n            cursor: pointer;\n        }\n        #canvas-container {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            z-index: 5;\n            pointer-events: none;\n        }\n        #highlight-canvas {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            pointer-events: none;\n        }\n        #highlight-canvas.active {\n            pointer-events: auto;\n        }\n        #loading-indicator {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            color: white;\n            font-family: Arial, sans-serif;\n            font-size: 20px;\n            z-index: 1000;\n        }\n        #error-message {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            color: white;\n            background: rgba(255, 0, 0, 0.7);\n            padding: 20px;\n            border-radius: 5px;\n            font-family: Arial, sans-serif;\n            display: none;\n            text-align: center;\n            max-width: 80%;\n        }\n    </style>\n</head>\n<body>\n    <div id=\"loading-indicator\">Loading player...</div>\n    <div id=\"error-message\"></div>\n    \n    <div id=\"player-container\">\n        <div id=\"video-container\">\n            <video id=\"video-player\" playsinline controls muted autoplay></video>\n            <div class=\"buttons-overlay\"></div>\n            <div id=\"canvas-container\">\n                <canvas id=\"highlight-canvas\"></canvas>\n            </div>\n            <div id=\"highlighter-controls\">\n                <button id=\"highlighter-toggle\">Highlighter</button>\n                <div id=\"color-picker\">\n                    <div class=\"color-option\" style=\"background-color: #ff0000;\"></div>\n                    <div class=\"color-option\" style=\"background-color: #00ff00;\"></div>\n                    <div class=\"color-option\" style=\"background-color: #0000ff;\"></div>\n                    <div class=\"color-option\" style=\"background-color: #ffff00;\"></div>\n                    <div class=\"color-option\" style=\"background-color: #ff00ff;\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- Include HLS.js for streaming video -->\n    <script src=\"https://cdn.jsdelivr.net/npm/hls.js@1.4.0/dist/hls.min.js\"></script>\n    \n    <!-- Self-contained player script -->\n    <script>\n        document.addEventListener('DOMContentLoaded', async () => {\n            // Get project ID from URL parameters\n            const urlParams = new URLSearchParams(window.location.search);\n            const projectId = urlParams.get('project');\n            \n            if (!projectId) {\n                showError('No project ID specified');\n                return;\n            }\n            \n            console.log('Loading project:', projectId);\n            \n            try {\n                // Use hardcoded domain to avoid CORS/origin issues\n                const apiUrl = \\`https://learn.threeminutetheory.com/api/embed/\\${projectId}\\`;\n                console.log('Fetching project data from:', apiUrl);\n                \n                const response = await fetch(apiUrl, {\n                    method: 'GET',\n                    headers: {\n                        'Accept': 'application/json'\n                    },\n                    mode: 'cors',\n                    credentials: 'omit', // Don't send cookies to avoid auth issues\n                    cache: 'no-cache'\n                });\n                \n                if (!response.ok) {\n                    throw new Error(\\`Failed to load project: \\${response.status} \\${response.statusText}\\`);\n                }\n                \n                const projectData = await response.json();\n                console.log('Project data loaded:', projectData);\n                \n                // Hide loading indicator\n                document.getElementById('loading-indicator').style.display = 'none';\n                \n                // Initialize player with the project data\n                const player = new VideoPlayer(projectData);\n                \n            } catch (error) {\n                console.error('Error loading project:', error);\n                showError(\\`Error loading project: \\${error.message}\\`);\n            }\n        });\n        \n        function showError(message) {\n            const loadingIndicator = document.getElementById('loading-indicator');\n            if (loadingIndicator) {\n                loadingIndicator.style.display = 'none';\n            }\n            \n            const errorElement = document.getElementById('error-message');\n            if (errorElement) {\n                errorElement.textContent = message;\n                errorElement.style.display = 'block';\n            }\n        }\n        \n        class VideoPlayer {\n            constructor(projectData) {\n                this.project = projectData;\n                this.videoEl = document.getElementById('video-player');\n                this.buttonsContainer = document.querySelector('.buttons-overlay');\n                \n                // Highlighter elements\n                this.canvas = document.getElementById('highlight-canvas');\n                this.ctx = this.canvas.getContext('2d');\n                this.isDrawing = false;\n                this.isHighlightMode = false;\n                \n                // HLS instance\n                this.hls = null;\n                \n                // Set default line style\n                this.lineWidth = 3;\n                this.lineColor = '#ff0000';\n                \n                // Time update handler\n                this.timeUpdateHandler = null;\n                \n                // Loop counter\n                this.loopCount = 0;\n                \n                // Active buttons\n                this.activeButtons = new Map();\n                \n                // Add video end event listener\n                this.videoEl.addEventListener('ended', this.handleVideoEnd.bind(this));\n                \n                // Initialize highlighter functionality\n                this.setupHighlighter();\n                \n                // Resize canvas to match video dimensions\n                this.resizeCanvas();\n                window.addEventListener('resize', this.resizeCanvas.bind(this));\n                \n                // Load the first video\n                const startNodeId = projectData.startNodeId || \n                    (projectData.videos && projectData.videos.length > 0 ? projectData.videos[0].id : null);\n                \n                if (startNodeId) {\n                    this.loadVideo(startNodeId);\n                } else {\n                    showError('No valid start node found in project data');\n                }\n            }\n            \n            setupHighlighter() {\n                // Set up toggle button\n                const toggleButton = document.getElementById('highlighter-toggle');\n                const colorPicker = document.getElementById('color-picker');\n                \n                toggleButton.addEventListener('click', () => {\n                    this.isHighlightMode = !this.isHighlightMode;\n                    toggleButton.classList.toggle('active');\n                    colorPicker.classList.toggle('active');\n                    this.canvas.classList.toggle('active');\n                    \n                    if (!this.isHighlightMode) {\n                        this.clearCanvas();\n                    }\n                });\n                \n                // Set up color options\n                const colorOptions = document.querySelectorAll('.color-option');\n                colorOptions.forEach(option => {\n                    option.addEventListener('click', () => {\n                        this.lineColor = option.style.backgroundColor;\n                    });\n                });\n                \n                // Set up canvas events for drawing\n                this.canvas.addEventListener('mousedown', this.startDrawing.bind(this));\n                this.canvas.addEventListener('mousemove', this.draw.bind(this));\n                this.canvas.addEventListener('mouseup', this.stopDrawing.bind(this));\n                this.canvas.addEventListener('mouseout', this.stopDrawing.bind(this));\n                \n                // Touch support\n                this.canvas.addEventListener('touchstart', this.handleTouchStart.bind(this));\n                this.canvas.addEventListener('touchmove', this.handleTouchMove.bind(this));\n                this.canvas.addEventListener('touchend', this.stopDrawing.bind(this));\n            }\n            \n            resizeCanvas() {\n                if (this.canvas) {\n                    const videoRect = this.videoEl.getBoundingClientRect();\n                    this.canvas.width = videoRect.width;\n                    this.canvas.height = videoRect.height;\n                }\n            }\n            \n            clearCanvas() {\n                if (this.ctx) {\n                    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n                }\n            }\n            \n            startDrawing(e) {\n                if (!this.isHighlightMode) return;\n                this.isDrawing = true;\n                this.ctx.beginPath();\n                const rect = this.canvas.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                this.ctx.moveTo(x, y);\n            }\n            \n            handleTouchStart(e) {\n                if (!this.isHighlightMode) return;\n                e.preventDefault();\n                const touch = e.touches[0];\n                const rect = this.canvas.getBoundingClientRect();\n                const x = touch.clientX - rect.left;\n                const y = touch.clientY - rect.top;\n                \n                this.isDrawing = true;\n                this.ctx.beginPath();\n                this.ctx.moveTo(x, y);\n            }\n            \n            handleTouchMove(e) {\n                if (!this.isHighlightMode || !this.isDrawing) return;\n                e.preventDefault();\n                const touch = e.touches[0];\n                const rect = this.canvas.getBoundingClientRect();\n                const x = touch.clientX - rect.left;\n                const y = touch.clientY - rect.top;\n                \n                this.ctx.lineTo(x, y);\n                this.ctx.strokeStyle = this.lineColor;\n                this.ctx.lineWidth = this.lineWidth;\n                this.ctx.lineCap = 'round';\n                this.ctx.stroke();\n            }\n            \n            draw(e) {\n                if (!this.isHighlightMode || !this.isDrawing) return;\n                const rect = this.canvas.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                \n                this.ctx.lineTo(x, y);\n                this.ctx.strokeStyle = this.lineColor;\n                this.ctx.lineWidth = this.lineWidth;\n                this.ctx.lineCap = 'round';\n                this.ctx.stroke();\n            }\n            \n            stopDrawing() {\n                this.isDrawing = false;\n            }\n            \n            _convertCloudflareStreamUrlToMp4(hlsUrl) {\n                if (typeof hlsUrl === 'string' && hlsUrl.includes('cloudflarestream.com') && hlsUrl.includes('/manifest/video.m3u8')) {\n                    const match = hlsUrl.match(/https:\\/\\/([^/]+)\\/([a-f0-9]{32})\\/manifest\\/video\\.m3u8/);\n                    if (match && match[1] && match[2]) {\n                        const customerDomain = match[1];\n                        const videoId = match[2];\n                        return 'https://' + customerDomain + '/' + videoId + '/downloads/default.mp4';\n                    }\n                }\n                return hlsUrl;\n            }\n            \n            loadVideo(nodeId) {\n                console.log('Player: Attempting to load video node: ' + nodeId);\n\n                if (this.activeButtons && typeof this.clearButtons === 'function') {\n                    this.clearButtons(); // Clears from DOM and map\n                }\n\n                const node = this.project.videos.find(v => v.id === nodeId);\n                if (!node) {\n                    console.error('Player: Node not found:', nodeId);\n                    showError('Video content not found. Please check project data.');\n                    return;\n                }\n                this.currentNode = node;\n                this.currentNodeId = nodeId;\n                this.loopCount = 0;\n\n                if (this.hls) {\n                    this.hls.destroy();\n                    this.hls = null;\n                }\n\n                const videoURL = node.url;\n                if (!videoURL || typeof videoURL !== 'string') {\n                    console.error('Player: Video URL is missing or invalid for node:', nodeId, node);\n                    showError('Video URL is invalid. Please check project data.');\n                    return;\n                }\n\n                console.log('Player: Processing video URL: ' + videoURL + ' for node ' + nodeId);\n                this.videoEl.poster = ''; // Clear poster\n\n                if (Hls.isSupported() && videoURL.includes('.m3u8')) {\n                    console.log('Player: HLS.js is supported. Loading HLS stream.');\n                    this.hls = new Hls({\n                        maxBufferSize: 0, // Set to 0 for live/low-latency, or a few MB for VOD\n                        maxBufferLength: 30, // Max buffer length in seconds\n                        enableWorker: true // Use Web Workers for HLS processing\n                    });\n                    this.hls.loadSource(videoURL);\n                    this.hls.attachMedia(this.videoEl);\n                    this.hls.on(Hls.Events.MANIFEST_PARSED, () => {\n                        console.log('Player: HLS manifest parsed. Attempting to play.');\n                        this.videoEl.play().catch(e => console.error('Player: HLS playback failed after manifest parse:', e));\n                    });\n                    this.hls.on(Hls.Events.ERROR, (event, data) => {\n                        console.error('Player: HLS.js error:', { type: data.type, details: data.details, fatal: data.fatal, url: data.url });\n                        if (data.fatal) {\n                            let mp4UrlAttempted = false;\n                            switch (data.type) {\n                                case Hls.ErrorTypes.NETWORK_ERROR:\n                                    console.error('Player: HLS fatal network error.');\n                                    const mp4Url = this._convertCloudflareStreamUrlToMp4(videoURL);\n                                    if (mp4Url !== videoURL) {\n                                        console.log('Player: HLS.js network error, attempting MP4 fallback: ' + mp4Url);\n                                        if (this.hls) { this.hls.destroy(); this.hls = null; }\n                                        this.videoEl.src = mp4Url;\n                                        this.videoEl.play().catch(e => console.error('Player: MP4 fallback playback failed (network error):', e));\n                                        mp4UrlAttempted = true;\n                                    }\n                                    break;\n                                case Hls.ErrorTypes.MEDIA_ERROR:\n                                    console.error('Player: HLS fatal media error, trying to recover...');\n                                    if (this.hls) this.hls.recoverMediaError();\n                                    break;\n                                default:\n                                    if (this.hls) { this.hls.destroy(); this.hls = null; }\n                                    break;\n                            }\n                            if (!mp4UrlAttempted && videoURL.includes('.m3u8')) {\n                                const fallbackMp4Url = this._convertCloudflareStreamUrlToMp4(videoURL);\n                                if (fallbackMp4Url !== videoURL) {\n                                    console.warn('Player: Unhandled HLS.js fatal error (' + data.details + '), attempting MP4 fallback: ' + fallbackMp4Url);\n                                    if (this.hls) { this.hls.destroy(); this.hls = null; }\n                                    this.videoEl.src = fallbackMp4Url;\n                                    this.videoEl.play().catch(e => console.error('Player: MP4 fallback playback failed (default fatal error):', e));\n                                }\n                            }\n                        }\n                    });\n                } else if (this.videoEl.canPlayType('application/vnd.apple.mpegurl') && videoURL.includes('.m3u8')) {\n                    console.log('Player: Native HLS supported (e.g., Safari). Setting src directly.');\n                    this.videoEl.src = videoURL;\n                    this.videoEl.addEventListener('loadedmetadata', () => {\n                        console.log('Player: Native HLS metadata loaded. Attempting to play.');\n                        this.videoEl.play().catch(e => console.error('Player: Native HLS playback failed:', e));\n                    }, { once: true });\n                } else {\n                    console.log('Player: HLS.js not supported or not an M3U8 URL. Trying direct play or MP4 conversion.');\n                    const playableUrl = this._convertCloudflareStreamUrlToMp4(videoURL);\n                    console.log('Player: Using URL for direct play: ' + playableUrl);\n                    this.videoEl.src = playableUrl;\n                    this.videoEl.play().catch(e => console.error('Player: Direct/MP4 playback failed:', e));\n                }\n\n                if (this.timeUpdateHandler) {\n                    this.videoEl.removeEventListener('timeupdate', this.timeUpdateHandler);\n                }\n                this.timeUpdateHandler = this.updateButtons.bind(this);\n                this.videoEl.addEventListener('timeupdate', this.timeUpdateHandler);\n                \n                if (typeof this.clearCanvas === 'function') {\n                    this.clearCanvas();\n                }\n                console.log('Player: Finished setting up video node: ' + nodeId);\n            }\n\n            updateButtons() {\n                if (!this.videoEl || !this.currentNode || !this.currentNode.buttons) {\n                    this.clearButtons();\n                    return;\n                }\n                const currentTime = this.videoEl.currentTime;\n                const buttonsToShow = new Set();\n\n                this.currentNode.buttons.forEach(buttonData => {\n                    if (currentTime >= buttonData.startTime && currentTime <= buttonData.endTime) {\n                        buttonsToShow.add(buttonData.id);\n                        if (!this.activeButtons.has(buttonData.id)) {\n                            this.createButton(buttonData);\n                        }\n                    }\n                });\n\n                // Remove buttons that are no longer active\n                const currentActiveButtonIds = Array.from(this.activeButtons.keys());\n                currentActiveButtonIds.forEach(buttonId => {\n                    if (!buttonsToShow.has(buttonId)) {\n                        this.removeButton(buttonId);\n                    }\n                });\n            }\n            \n            createButton(buttonData) {\n                const buttonEl = document.createElement('button');\n                buttonEl.className = 'interactive-button';\n                buttonEl.textContent = buttonData.text || 'Click';\n                buttonEl.dataset.targetNodeId = buttonData.targetNodeId;\n                \n                // Position the button using string concatenation\n                buttonEl.style.position = 'absolute'; // Ensure buttons are positioned within overlay\n                buttonEl.style.top = String(buttonData.position.y) + '%';\n                buttonEl.style.left = String(buttonData.position.x) + '%';\n                \n                buttonEl.addEventListener('click', () => {\n                    if (buttonData.targetNodeId) {\n                        this.loadVideo(buttonData.targetNodeId);\n                    }\n                });\n                \n                this.buttonsContainer.appendChild(buttonEl);\n                this.activeButtons.set(buttonData.id, buttonEl);\n                return buttonEl;\n            }\n            \n            removeButton(buttonId) {\n                const buttonEl = this.activeButtons.get(buttonId);\n                if (buttonEl && buttonEl.parentNode) {\n                    buttonEl.parentNode.removeChild(buttonEl);\n                }\n                this.activeButtons.delete(buttonId);\n            }\n            \n            clearButtons() {\n                this.activeButtons.forEach((buttonEl) => {\n                    if (buttonEl.parentNode) {\n                        buttonEl.parentNode.removeChild(buttonEl);\n                    }\n                });\n                \n                this.activeButtons.clear();\n            }\n            \n            handleVideoEnd() {\n                // Find the current node\n                const currentNode = this.project.videos.find(video => video.id === this.currentNodeId);\n                if (!currentNode) return;\n                \n                // Check if there's a default next node\n                if (currentNode.defaultNextNodeId) {\n                    console.log('Auto-advancing to next node:', currentNode.defaultNextNodeId);\n                    this.loadVideo(currentNode.defaultNextNodeId);\n                    return;\n                }\n                \n                // If there's only one button, treat it as the default next node\n                if (currentNode.buttons && currentNode.buttons.length === 1) {\n                    console.log('Auto-advancing to only button target:', currentNode.buttons[0].targetNodeId);\n                    this.loadVideo(currentNode.buttons[0].targetNodeId);\n                    return;\n                }\n                \n                // Loop the video if no next node and loop count is less than max\n                const maxLoops = 2;\n                if (this.loopCount < maxLoops) {\n                    this.loopCount++;\n                    this.videoEl.currentTime = 0;\n                    this.videoEl.play();\n                    return;\n                }\n                \n                this.loopCount = 0;\n                console.log('Video ended with no auto-advance configuration');\n            }\n        }\n    </script>\n</body>\n</html>`;\n\n  // Return the HTML content directly as a Response\n  return new Response(htmlContent, {\n    headers: {\n      \"Content-Type\": \"text/html;charset=UTF-8\",\n      \"Cache-Control\": \"no-cache\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n  });\n}\n", "// A simple session verification. In a real app, you'd want to decode\n// and validate the session token more robustly (e.g., check expiration).\nasync function verifySession(request) {\n    const cookieHeader = request.headers.get(\"Cookie\") || \"\";\n    const match = cookieHeader.match(/session=([^;]+)/);\n    return !!match; // Returns true if the session cookie exists, false otherwise.\n}\n\nexport const onRequest = async ({ request, next }) => {\n    const url = new URL(request.url);\n    const { pathname } = url;\n\n    // If the user is trying to access the login page or its assets, let them through.\n    // Also allow the login API call and all embed-related paths.\n    if (pathname === '/login' ||\n        pathname === '/api/login' ||\n        pathname === '/js/login.js' ||\n        pathname === '/css/login.css' ||\n        pathname.startsWith('/embed') ||\n        pathname.includes('embed-player') ||\n        pathname.startsWith('/api/embed') ||\n        pathname.startsWith('/js/') ||\n        pathname.startsWith('/css/') ||\n        pathname.startsWith('/assets/')) {\n        return next();\n    }\n\n    // For all other pages, check if the user has a valid session.\n    const isVerified = await verifySession(request);\n    if (isVerified) {\n        return next(); // User is logged in, proceed.\n    }\n\n    // If the user is not logged in, redirect them to the login page.\n    // This will catch requests to the root '/' and any other protected page.\n    const loginUrl = new URL('/login', url.origin);\n    return Response.redirect(loginUrl.toString(), 302);\n};\n", "import { onRequestGet as __api_embed__id__js_onRequestGet } from \"/Users/matthewgawronski/Documents/Interactive Video Editor/functions/api/embed/[id].js\"\nimport { onRequestGet as __api_loadProject_js_onRequestGet } from \"/Users/matthewgawronski/Documents/Interactive Video Editor/functions/api/loadProject.js\"\nimport { onRequestPost as __api_login_js_onRequestPost } from \"/Users/matthewgawronski/Documents/Interactive Video Editor/functions/api/login.js\"\nimport { onRequestPost as __api_logout_js_onRequestPost } from \"/Users/matthewgawronski/Documents/Interactive Video Editor/functions/api/logout.js\"\nimport { onRequestPost as __api_saveProject_js_onRequestPost } from \"/Users/matthewgawronski/Documents/Interactive Video Editor/functions/api/saveProject.js\"\nimport { onRequest as __player___path___js_onRequest } from \"/Users/matthewgawronski/Documents/Interactive Video Editor/functions/player/[[path]].js\"\nimport { onRequest as ___middleware_js_onRequest } from \"/Users/matthewgawronski/Documents/Interactive Video Editor/functions/_middleware.js\"\n\nexport const routes = [\n    {\n      routePath: \"/api/embed/:id\",\n      mountPath: \"/api/embed\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_embed__id__js_onRequestGet],\n    },\n  {\n      routePath: \"/api/loadProject\",\n      mountPath: \"/api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_loadProject_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/login\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_login_js_onRequestPost],\n    },\n  {\n      routePath: \"/api/logout\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_logout_js_onRequestPost],\n    },\n  {\n      routePath: \"/api/saveProject\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_saveProject_js_onRequestPost],\n    },\n  {\n      routePath: \"/player/:path*\",\n      mountPath: \"/player\",\n      method: \"\",\n      middlewares: [],\n      modules: [__player___path___js_onRequest],\n    },\n  {\n      routePath: \"/\",\n      mountPath: \"/\",\n      method: \"\",\n      middlewares: [___middleware_js_onRequest],\n      modules: [],\n    },\n  ]", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import { match } from \"path-to-regexp\";\n\n//note: this explicitly does not include the * character, as pages requires this\nconst escapeRegex = /[.+?^${}()|[\\]\\\\]/g;\n\ntype HTTPMethod =\n\t| \"HEAD\"\n\t| \"OPTIONS\"\n\t| \"GET\"\n\t| \"POST\"\n\t| \"PUT\"\n\t| \"PATCH\"\n\t| \"DELETE\";\n\n/* TODO: Grab these from @cloudflare/workers-types instead */\ntype Params<P extends string = string> = Record<P, string | string[]>;\n\ntype EventContext<Env, P extends string, Data> = {\n\trequest: Request;\n\tfunctionPath: string;\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n\tnext: (input?: Request | string, init?: RequestInit) => Promise<Response>;\n\tenv: Env & { ASSETS: { fetch: typeof fetch } };\n\tparams: Params<P>;\n\tdata: Data;\n};\n\ndeclare type PagesFunction<\n\tEnv = unknown,\n\tP extends string = string,\n\tData extends Record<string, unknown> = Record<string, unknown>,\n> = (context: EventContext<Env, P, Data>) => Response | Promise<Response>;\n/* end @cloudflare/workers-types */\n\ntype RouteHandler = {\n\troutePath: string;\n\tmountPath: string;\n\tmethod?: HTTPMethod;\n\tmodules: PagesFunction[];\n\tmiddlewares: PagesFunction[];\n};\n\n// inject `routes` via ESBuild\ndeclare const routes: RouteHandler[];\n// define `__FALLBACK_SERVICE__` via ESBuild\ndeclare const __FALLBACK_SERVICE__: string;\n\n// expect an ASSETS fetcher binding pointing to the asset-server stage\ntype FetchEnv = {\n\t[name: string]: { fetch: typeof fetch };\n\tASSETS: { fetch: typeof fetch };\n};\n\ntype WorkerContext = {\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n};\n\nfunction* executeRequest(request: Request) {\n\tconst requestPath = new URL(request.url).pathname;\n\n\t// First, iterate through the routes (backwards) and execute \"middlewares\" on partial route matches\n\tfor (const route of [...routes].reverse()) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// replaces with \"\\\\$&\", this prepends a backslash to the matched string, e.g. \"[\" becomes \"\\[\"\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult) {\n\t\t\tfor (const handler of route.middlewares.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: mountMatchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then look for the first exact route match and execute its \"modules\"\n\tfor (const route of routes) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: true,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult && route.modules.length) {\n\t\t\tfor (const handler of route.modules.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: matchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default {\n\tasync fetch(\n\t\toriginalRequest: Request,\n\t\tenv: FetchEnv,\n\t\tworkerContext: WorkerContext\n\t) {\n\t\tlet request = originalRequest;\n\t\tconst handlerIterator = executeRequest(request);\n\t\tlet data = {}; // arbitrary data the user can set between functions\n\t\tlet isFailOpen = false;\n\n\t\tconst next = async (input?: RequestInfo, init?: RequestInit) => {\n\t\t\tif (input !== undefined) {\n\t\t\t\tlet url = input;\n\t\t\t\tif (typeof input === \"string\") {\n\t\t\t\t\turl = new URL(input, request.url).toString();\n\t\t\t\t}\n\t\t\t\trequest = new Request(url, init);\n\t\t\t}\n\n\t\t\tconst result = handlerIterator.next();\n\t\t\t// Note we can't use `!result.done` because this doesn't narrow to the correct type\n\t\t\tif (result.done === false) {\n\t\t\t\tconst { handler, params, path } = result.value;\n\t\t\t\tconst context = {\n\t\t\t\t\trequest: new Request(request.clone()),\n\t\t\t\t\tfunctionPath: path,\n\t\t\t\t\tnext,\n\t\t\t\t\tparams,\n\t\t\t\t\tget data() {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t},\n\t\t\t\t\tset data(value) {\n\t\t\t\t\t\tif (typeof value !== \"object\" || value === null) {\n\t\t\t\t\t\t\tthrow new Error(\"context.data must be an object\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// user has overriden context.data, so we need to merge it with the existing data\n\t\t\t\t\t\tdata = value;\n\t\t\t\t\t},\n\t\t\t\t\tenv,\n\t\t\t\t\twaitUntil: workerContext.waitUntil.bind(workerContext),\n\t\t\t\t\tpassThroughOnException: () => {\n\t\t\t\t\t\tisFailOpen = true;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst response = await handler(context);\n\n\t\t\t\tif (!(response instanceof Response)) {\n\t\t\t\t\tthrow new Error(\"Your Pages function should return a Response\");\n\t\t\t\t}\n\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else if (__FALLBACK_SERVICE__) {\n\t\t\t\t// There are no more handlers so finish with the fallback service (`env.ASSETS.fetch` in Pages' case)\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else {\n\t\t\t\t// There was not fallback service so actually make the request to the origin.\n\t\t\t\tconst response = await fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\treturn await next();\n\t\t} catch (error) {\n\t\t\tif (isFailOpen) {\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t},\n};\n\n// This makes a Response mutable\nconst cloneResponse = (response: Response) =>\n\t// https://fetch.spec.whatwg.org/#null-body-status\n\tnew Response(\n\t\t[101, 204, 205, 304].includes(response.status) ? null : response.body,\n\t\tresponse\n\t);\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/matthewgawronski/Documents/Interactive Video Editor/node_modules/wrangler/templates/pages-template-worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/matthewgawronski/Documents/Interactive Video Editor/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/matthewgawronski/Documents/Interactive Video Editor/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/matthewgawronski/Documents/Interactive Video Editor/node_modules/wrangler/templates/pages-template-worker.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/matthewgawronski/Documents/Interactive Video Editor/.wrangler/tmp/bundle-ryvzru/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/matthewgawronski/Documents/Interactive Video Editor/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/matthewgawronski/Documents/Interactive Video Editor/.wrangler/tmp/bundle-ryvzru/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/matthewgawronski/Documents/Interactive Video Editor/.wrangler/tmp/bundle-ryvzru/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["onRequestGet", "onRequestPost", "onRequestPost", "match", "onRequest", "onRequestGet", "onRequestPost", "onRequest", "value", "_a", "result", "char", "prefix", "i"]
}
